#define LED1 P1_0
#define LED2 P1_6
#define LED3 P2_1
#define LED4 P2_3
#define LED5 P2_5
#define LED1_BUTTON P1_7
#define LED2_BUTTON P1_3

/*********************************************
  Buttons to turn LED on/off
 *********************************************/
/* Check the state of LED1 and LED2 buttons */
bool lastStateLedOneBtn = 0;
bool lastStateLedTwoBtn = 0;

/* Check if LEDs are on or off*/
bool ledOne = 0;    // 0 = LED off, 1 = LED on
bool ledTwo = 0;
/*The next 2 functions turn the specified LED on or off when the button is pressed, depending on the state of the LED*/
long int timer(int minutes){
	minutes = minutes * 60;
	return (1MHZ / 8) * minutes;
}
void buttonLedOnePressed() 
{
	bool currentBtnState = digitalRead(LED1_BUTTON);
	bool btnPressed = 0;

	if( !lastStateLedOneBtn && currentBtnState)
	{
		btnPressed = 1;
		if (ledOne == 0) {    // if off, turn it on
			digitalWrite(LED1, HIGH);
			ledOne = 1;
		} else {    // if on, turn it off
			digitalWrite(LED1, LOW);
			ledOne = 0;
		}
	}
	lastStateLedOneBtn = currentBtnState;
	return;
}

void buttonLedTwoPressed() {
	bool currentBtnState = digitalRead(LED2_BUTTON);
	bool btnPressed = 0;

	if( !lastStateLedTwoBtn && currentBtnState)
	{
		btnPressed = 1;
		if (ledTwo == 0) {    // if off, turn it on
			digitalWrite(LED2, HIGH);
			ledTwo = 1;
		} else {    // if on, turn it off
			digitalWrite(LED2, LOW);
			ledTwo = 0;
		}
	}
	lastStateLedTwoBtn = currentBtnState;
	return;
}


state = 0;
void setup() 
{
	// initialize the digital pin as an output.
	pinMode(LED1, OUTPUT);
	pinMode(LED2, OUTPUT);
	pinMode(LED3, OUTPUT);
	pinMode(LED4, OUTPUT);
	pinMode(LED5, OUTPUT);
	pinMode(LED1_BUTTON, INPUT);
	pinMode(LED2_BUTTON, INPUT);
	digitalWrite (LED1, 0);
	digitalWrite (LED2, 0);
	digitalWrite (LED3, 0);
	digitalWrite (LED4, 0);
	digitalWrite (LED5, 0);
	attachInterrupt(LED1_BUTTON, ISR1, RISING);
	attachInterrupt(LED2_BUTTON, ISR2, RISING);
	startTimer(1); // set timer period to 1 minute
}

void ISR1(){
	state = !state;
	digitalWrite(LED1, state);
}	
void ISR2(){
	state = !state;
	digitalWrite(LED1, state);
}

void startTimer(int length){
	TA0CTL0 = CCIE;                             // Enable Timer Interrupt 
	TA0CTL = TASSEL_2 + MC_1 + ID_3;           /* MC_1 Means count up to CCR0, Tassel_2 means count 1Mhz a second, ID_3 means divide clock by 8 
	long int interval = timer(length);
	TA0CCR0 = interval;

}
void timerISR(){
	digitalWrite(P1_6,state); // Write to LED
	state=~state;             // toggle state

}
// the loop routine runs over and over again forever:
void loop()
{
	buttonLedOnePressed();
	buttonLedTwoPressed();
}

